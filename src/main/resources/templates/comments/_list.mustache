<div class="container mt-3">

    <!-- 닉네임 조회 UI -->
    <form class="d-flex flex-row m-3" action="/api/articles/comments" method="get">
        <label class="form-label m-1">닉네임</label>
        <input type="text" class="form-control m-1 w-25" id="comment-nickname" name="nickname">
        <button type="submit" class="btn btn-primary">이름검색</button>
    </form>


    <div id="comments-list">
        {{#commentsDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!--수정버튼 추가-->
                <button class="btn btn-warning"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}"
                >Edit</button>
                <!-- 삭제버튼 -->
                <button type="button" class="btn btn-danger comment-delete-btn" data-bs-id="{{id}}"
                >삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
        {{/commentsDtos}}
    </div>

    <!-- modal -->
    <div class="modal fade" id="comment-edit-modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLable">댓글수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">닉네임
                            <input type="text" class="form-control" id="edit-comment-nickname">
                        </label>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">댓글내용
                            <textarea rows="3" class="form-control" id="edit-comment-body"></textarea>
                        </label>
                    </div>
                    <!-- 코멘트 ID 히든값 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <button type="button" class="btn btn-primary" id="comment-update-btn">수정</button>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
{
// 모달
const exampleModal = document.querySelector('#comment-edit-modal');
if (exampleModal) {
  exampleModal.addEventListener('show.bs.modal', event => {
    // Button that triggered the modal
    const button = event.relatedTarget
    // Extract info from data-bs-* attributes
    const id = button.getAttribute("data-bs-id");
    const nickname = button.getAttribute("data-bs-nickname");
    const body = button.getAttribute("data-bs-body");
    const articleId = button.getAttribute("data-bs-article_id");
    // If necessary, you could initiate an Ajax request here
    // and then do the updating in a callback.
    // Update the modal's content.
    document.querySelector("#edit-comment-id").value = id;
    document.querySelector("#edit-comment-nickname").value = nickname;
    document.querySelector("#edit-comment-body").value = body;
    document.querySelector("#edit-comment-article-id").value = articleId;
  })
}
}
{
// 수정버튼
const commentUpdateBtn = document.querySelector("#comment-update-btn");
commentUpdateBtn.addEventListener("click", function() {
    const comment = {
        id: document.querySelector("#edit-comment-id").value,
        nickname: document.querySelector("#edit-comment-nickname").value,
        body: document.querySelector("#edit-comment-body").value,
        article_id: document.querySelector("#edit-comment-article-id").value
    };
    console.log(comment);
    // 비동기 통신
    const url = "/api/comments/" + comment.id;
    fetch(url, {
        method: "PATCH",
        body: JSON.stringify(comment),
        headers: {
            "Content-Type":"application/json"
        }
    }).then(response => {
        console.log(response);
        const msg = (response.ok) ? "댓글이 수정되었습니다." : "댓글 수정 실패";
        alert(msg);
        if (response.ok) window.location.reload();
    }).catch(error => console.error("Error: " + error));
});
}
// 삭제버튼
{
const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
commentDeleteBtns.forEach( btn => {

    btn.addEventListener("click", function(e) {
        const commentId = btn.getAttribute("data-bs-id");
        console.log("삭제 버튼, id: " + commentId);
        const isDelete = confirm("삭제하시겠습니까?");
        if (!isDelete) return;
        // 비동기 통신
        const url = `/api/comments/${commentId}`;
        fetch(url, {
            method: "DELETE"
        }).then(response => {
            console.log(response);
            const msg = (response.ok) ? "댓글이 삭제되었습니다." : "댓글 삭제 실패";
            alert(msg);
            if (response.ok) window.location.reload();
        }).catch(error => console.error("Error: " + error));
    });
});
}
</script>